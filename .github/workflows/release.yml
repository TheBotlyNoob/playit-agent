name: Release

on:
    release:
        types: [published]
    push:

jobs:
    build:
        runs-on: ${{ matrix.target.os }}
        environment: production
        strategy:
            fail-fast: false
            matrix:
                target:
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: i686-unknown-linux-gnu
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-multilib
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-aarch64-linux-gnu
                    - target: armv7-unknown-linux-gnueabihf
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-arm-linux-gnueabihf

                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
                    - target: i686-pc-windows-msvc
                      os: windows-latest
                    # https://github.com/briansmith/ring/issues/1167
                    # - target: aarch64-pc-windows-msvc
                    #   os: windows-latest

                    - target: x86_64-apple-darwin
                      os: macos-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest

        steps:
            - uses: actions/checkout@v3

            - uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target.target }}

            - name: Run Prebuild Commands
              if: ${{ matrix.target.prebuild }}
              run: ${{ matrix.target.prebuild }}

            - name: Build
              run: cargo build --release --target ${{ matrix.target.target }}

            - name: Get Binary Package Name
              id: package
              run: |
                  cargo install tomato-toml
                  echo "NAME=$(tomato get package.name packages/agent_cli/Cargo.toml)" >> $GITHUB_OUTPUT
              shell: bash

            - name: Build Install Package
              if: ${{ contains(matrix.target.target, 'linux') || contains(matrix.target.target, 'apple') }}
              run: |
                  cargo install cargo-bundle
                  cd packages/agent_cli
                  cargo bundle --release --target ${{ matrix.target.target }}

            - name: Get Release Data
              id: data
              run: |
                  bin=${{ steps.package.outputs.NAME }}
                  echo "$bin"
                  target=${{ matrix.target.target }}
                  ext=$([[ "$target" =~ "windows" ]] && echo ".exe" || echo "")
                  echo "$ext"
                  file="target/$target/release/$bin-$target$ext"
                  mv "target/$target/release/$bin$ext" "$file"
                  if [[ "$target" =~ "linux" ]]; then
                      file+=";target/$target/release/bundle/deb/*.deb"
                  elif [[ "$target" =~ "apple" ]]; then
                      hdiutil create -volname "PlayIt Installer" -srcfolder "target/$target/release/bundle/osx/$bin.app" -ov -format UDZO "playit-$target.dmg"
                      file+=";playit-$target.dmg"
                  fi

                  echo "FILE=$file"
                  echo "FILE=$file" >> $GITHUB_OUTPUT
              shell: bash

            - name: Upload Release
              if: ${{ github.event_name == 'release' }}
              uses: AButler/upload-release-assets@v2.0
              with:
                  files: ${{ steps.data.outputs.FILE }}
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
