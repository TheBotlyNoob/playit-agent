name: Release

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: ${{ matrix.target.os }}
        environment: production
        strategy:
            fail-fast: false
            matrix:
                target:
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: i686-unknown-linux-gnu
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-multilib
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-aarch64-linux-gnu
                    - target: armv7-unknown-linux-gnueabihf
                      os: ubuntu-latest
                      prebuild: sudo apt-get install -y gcc-arm-linux-gnueabihf

                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
                    - target: i686-pc-windows-msvc
                      os: windows-latest

                    - target: x86_64-apple-darwin
                      os: macos-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest

        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target.target }}

            - name: Run Prebuild Commands
              if: ${{ matrix.target.prebuild }}
              run: ${{ matrix.target.prebuild }}

            - name: Build
              run: cargo build --release --target ${{ matrix.target.target }} --locked

            - name: Upload Release Asset (Linux)
              if: ${{ matrix.target.os == 'ubuntu-latest' }}
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./target/${{ matrix.target.target }}/release/${{ github.event.repository.name }}
                  asset_name: ${{ github.event.repository.name }}-${{ matrix.target.target }}
                  asset_content_type: application/octet-stream
            - name: Upload Release Asset (Windows)
              if: ${{ matrix.target.os == 'windows-latest' }}
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./target/${{ matrix.target.target }}/release/${{ github.event.repository.name }}.exe
                  asset_name: ${{ github.event.repository.name }}-${{ matrix.target.target }}.exe
                  asset_content_type: application/octet-stream
